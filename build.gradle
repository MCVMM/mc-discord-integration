plugins {
	id 'java'
	id 'fabric-loom' version '0.4-SNAPSHOT'
	id 'org.jetbrains.kotlin.jvm' version '1.4.0'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
compileKotlin.kotlinOptions.jvmTarget = '1.8'
compileTestKotlin.kotlinOptions.jvmTarget = '1.8'

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

// Add new configuration that adds the lib into the jar

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Discord API for Java
	implementation ('net.dv8tion:JDA:4.2.0_191') {
		exclude module: 'opus-java'
	}
	include ('net.dv8tion:JDA:4.2.0_191') {
		exclude module: 'opus-java'
	}
	include "net.sf.trove4j:trove4j:3.0.3"
	include 'org.slf4j:slf4j-nop:1.7.25'
	include 'org.slf4j:slf4j-api:1.7.25'
	include 'org.apache.commons:commons-collections4:4.1'
	include 'com.neovisionaries:nv-websocket-client:2.10'
	include 'com.squareup.okhttp3:okhttp:3.13.0'
	include 'com.squareup.okio:okio:1.17.2'
	include 'com.fasterxml.jackson.core:jackson-databind:2.10.1'
	include 'com.fasterxml.jackson.core:jackson-annotations:2.10.1'
	include 'com.fasterxml.jackson.core:jackson-core:2.10.1'

	// Kotlin
	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
	include 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
	modImplementation 'net.fabricmc:fabric-language-kotlin:1.3.72+build.1'
}

repositories {
	jcenter()
	google()
	mavenCentral()
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}